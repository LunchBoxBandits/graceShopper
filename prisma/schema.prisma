// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
///order procuts has one user, and one user has many order_products
model Users {
  id Int @id @default(autoincrement())
  firstName String
  lastName String
  email String @unique
  password String
  address String?
  isAdmin Boolean @default(false)
  phone String?
  orders Orders[]

}

model Orders {
  id Int @id @default(autoincrement())
  userId Int?  
  users Users? @relation(fields: [userId], references: [id])
  total Int? 
  isCart Boolean? @default(true)
  order_products Order_Products[]
  payment_details Payment_Details[]
} 

model Products {
  id Int @id @default(autoincrement())
  name String 
  price Int
  description String
  imageUrl String
  order_products Order_Products[]
  category_id Int?
  gender_id Int?
  categories Categories? @relation(fields: [category_id], references: [id])
  gender Gender? @relation(fields: [gender_id], references: [id])

}

model Order_Products {
  id Int @id @default(autoincrement())
  order_id Int  
  product_id Int?
  quantity Int
  orders Orders? @relation(fields: [order_id], references: [id])
  products Products? @relation(fields: [product_id], references: [id])

}

model Payment_Details {
  id Int @id @default(autoincrement())
  order_id Int?
  orders Orders? @relation(fields: [order_id], references: [id])
  nameOnCard String
  cardNumber String
  experationDate String 
  cvc Int 
  amount Int
  provider String
}

model Categories {
  id Int @id @default(autoincrement())
  name String
  product Products[]
}

model Gender {
  id Int @id @default(autoincrement())
  name String
  product Products[]
} 